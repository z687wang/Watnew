var f, r;
f = function (i, next) {
  setTimeout(function () {
    console.log(i);
    next(i);
  }, i);
};
r = [];
var _$parallel_done_0 = 0;
var _$errors_0 = [];
(function (_$cont) {
  f(50, function (arguments, _$param0) {
    ++_$parallel_done_0;
    r[0] = _$param0;
    _$cont();
  }.bind(this, arguments));
  f(100, function (arguments, _$param1) {
    ++_$parallel_done_0;
    r[1] = _$param1;
    _$cont();
  }.bind(this, arguments));
  f(20, function (arguments, _$param2) {
    ++_$parallel_done_0;
    r[2] = _$param2;
    _$cont();
  }.bind(this, arguments));
  f(10, function (arguments, _$param3) {
    ++_$parallel_done_0;
    r[3] = _$param3;
    _$cont();
  }.bind(this, arguments));
}(function (_$err) {
  if (_$err)
    _$errors_0.push(_$err);
  if (_$parallel_done_0 !== 4)
    return;
  if (_$errors_0.length > 0)
    throw _$errors_0;
  _$parallel_done_0 = undefined;
  _$err = undefined;
  _$errors_0 = undefined;
  console.log('Done', r);
}));
/* Generated by Continuation.js v0.1.7 */