/* Generated by Continuation.js v0.0.3 */
var drawHand, drawClock, drawClockAsync;
drawHand = function (value, length) {
  var angle, x, y;
  ctx.beginPath();
  angle = Math.PI * 2 * value / 60;
  x = Math.sin(angle) * length;
  y = Math.cos(angle) * length;
  ctx.moveTo(100, 100);
  ctx.lineTo(100 + x, 100 - y);
  ctx.stroke();
};
drawClock = function (time) {
  var h, m, s, text, i, angle, x, y;
  if (!ctx) {
    h = time.getHours();
    m = time.getMinutes();
    s = time.getSeconds();
    text = (h >= 10 ? h : '0' + h) + ':' + (h >= 10 ? m : '0' + m) + ':' + (h >= 10 ? s : '0' + s);
    document.getElementById('clockText').innerHTML = text;
    return;
  }
  ctx.clearRect(0, 0, 400, 400);
  ctx.beginPath();
  ctx.arc(100, 100, 90, 0, Math.PI * 2, false);
  i = 0;
  while (i < 60) {
    angle = Math.PI * 2 * i / 60;
    x = Math.sin(angle);
    y = Math.cos(angle);
    ctx.moveTo(100 + x * 85, 100 - y * 85);
    ctx.lineTo(100 + x * 90, 100 - y * 90);
    i += 5;
  }
  ctx.stroke();
  drawHand(time.getSeconds(), 80);
  drawHand(time.getMinutes() + time.getSeconds() * 1 / 60, 60);
  drawHand(time.getHours() % 12 * 5 + time.getMinutes() * 1 / 12, 40);
};
drawClockAsync = function (interval) {
  function loop_0(loop_0_cont) {
    if (true) {
      drawClock(new Date());
      setTimeout(function () {
        loop_0(loop_0_cont);
      }, interval);
    } else {
      loop_0_cont();
    }
  }
  loop_0(function () {
  });
};